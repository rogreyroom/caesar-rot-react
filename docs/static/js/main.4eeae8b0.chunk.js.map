{"version":3,"sources":["app/components/Main/Header/HeroImage/julius-caesar.png","app/components/Main/Header/HeroImage/index.tsx","app/components/Main/Header/H1/index.tsx","app/components/Main/Header/index.tsx","app/features/rot/rotSlice.ts","app/components/common/Select/SelectWrapper/index.tsx","app/components/common/Select/index.tsx","app/components/common/Select/Option/index.tsx","app/features/rot/Rot.tsx","app/features/cipher/cipherSlice.ts","app/features/util/helprs.ts","app/features/alphabet/alphabetSlice.ts","app/features/util/generateAlphabet.ts","app/components/common/Input/index.tsx","app/features/cipher/Cipher.tsx","app/components/Main/Inputs/index.tsx","app/components/common/P/index.tsx","app/components/Main/Output/index.tsx","app/components/Main/index.tsx","app/components/BottomSvg/index.tsx","App.tsx","app/store/index.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","HeroImage","styled","div","caesar","Title","h1","FirstWord","span","SecondWord","H1","StyledHeader","header","Header","rotSlice","createSlice","name","initialState","value","reducers","change","state","action","payload","actions","selectRot","rot","SelectWrapper","Select","select","Option","option","optionArray","Array","keys","RotSelect","useSelector","dispatch","useDispatch","optionList","map","key","onChange","target","selectedOptionValue","options","selectedIndex","cipherSlice","inputValue","outputValue","set","clear","cipher","input","alphabet","inputString","toString","convertToString","inputArray","cipheredString","isEmpty","Error","forEach","char","match","isAlphanumeric","isNumeric","concat","newValueIndex","index","arrayLength","indexValue","isOverArrayLength","shiftIndexValue","indexOf","toLowerCase","length","newChar","toUpperCase","isUpperCase","selectOutput","start","charCodeAt","end","i","push","String","fromCharCode","generateAlphabet","alphabetSlice","selectAlphabet","Input","InputText","alphabetArray","rotValue","onKeyPress","e","eventData","currentTarget","onClick","onBlur","InputsWrapper","section","Inputs","Rot","P","p","OutputWrapper","Output","StyledMain","main","Main","Svg","svg","attrs","version","xmlns","xmlnsXlink","BottomSvg","screenWidth","window","outerWidth","width","fill","fillRule","clipRule","d","AppBody","App","store","configureStore","reducer","alphabetReducer","rotReducer","cipherReducer","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4eeae8b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/julius-caesar.79e917ac.png\";","import styled from 'styled-components'\nimport caesar from './julius-caesar.png'\n\nconst HeroImage = styled.div`\n\tbackground: url(${caesar});\n\tbackground-position: top;\n\twidth: 100%;\n\theight: 100vh;\n\tz-index: -1;\n\tdisplay: none;\n\n\t@media (min-width: 736px) {\n\t\tdisplay: block;\n\t}\n`\n\nexport default HeroImage","import React from 'react'\nimport styled from 'styled-components'\n\nconst H1 = () => {\n  return (\n    <Title>\n      <FirstWord>CAESAR</FirstWord>\n      <SecondWord>OT</SecondWord>\n    </Title>\n  )\n}\n\nconst Title = styled.h1`\n  display: grid;\n\t\tgrid-template-columns: 16px auto;\n\t\tgrid-template-areas: \"first second\";\n\t\tcolor: var(--header-text-color);\n\t\tfont-size: 10vh;\n\t\tmargin: 0;\n`\n\nconst FirstWord = styled.span`\n  grid-area: first;\n\t\twidth: 0;\n\t\tword-wrap: break-word;\n`\n\nconst SecondWord = styled.span`\ngrid-area: second;\n\t\tword-wrap: normal;\n\t\tletter-spacing: calc(10vh / 2);\n\t\tmargin-left: calc(10vh - 8px);\n\t\twidth: 0;\n\t\talign-self: end;\n`\n\nexport default H1","import React from 'react'\nimport styled from 'styled-components'\nimport HeroImage from './HeroImage'\nimport H1 from './H1'\n\nconst Header = () => {\n  return (\n    <StyledHeader>\n      <HeroImage/>\n      <H1/>\n    </StyledHeader>\n  )\n}\n\nconst StyledHeader = styled.header`\n  grid-area: header;\n\tdisplay: flex;\n\talign-items: center;\n`\n\nexport default Header","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\n\r\ninterface RotState {\r\n  value: number;\r\n}\r\n\r\nconst initialState: RotState = {\r\n  value: 13,\r\n};\r\n\r\n\r\nexport const rotSlice = createSlice({\r\n  name: 'rot',\r\n  initialState,\r\n  reducers: {\r\n    change: (state, action: PayloadAction<number>) => {\r\n      state.value = action.payload;\r\n    }\r\n  }\r\n})\r\n\r\nexport const { change } = rotSlice.actions;\r\n\r\nexport const selectRot = (state: RootState) => state.rot.value\r\n\r\nexport default rotSlice.reducer","import styled from 'styled-components'\n\nconst SelectWrapper = styled.div`\n\t\tposition: relative;\n\t\twidth: 40px;\n\n\t\t&::after {\n\t\t\tcontent: \"â–¼\";\n\t\t\tfont-size: .8rem;\n\t\t\ttop: 10%;\n\t\t\tright: 6px;\n\t\t\tposition: absolute;\n\t\t\tcolor: var(--accent-color);\n\t\t\tz-index: -1;\n\t\t}\n`\n\nexport default SelectWrapper","import styled from 'styled-components'\r\n\r\nconst Select = styled.select`\r\n  -webkit-appearance: none;\r\n\tappearance: none;\r\n\tdisplay: block;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tborder: 0;\r\n\tborder-radius: 0;\r\n\tborder-bottom: 2px solid var(--accent-color);\r\n\tbackground: transparent;\r\n\twidth: 100%;\r\n\tfont-size: 1rem;\r\n\tmin-width: 40px;\r\n\r\n\t&:focus {\r\n\t\toutline: solid var(--accent-focus-color);\r\n\t}\r\n`\r\n\r\nexport default Select","import styled from 'styled-components'\r\n\r\nconst Option = styled.option`\r\n  -webkit-appearance: none;\r\n\tappearance: none;\r\n\tdisplay: block;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tborder: 0;\r\n\tborder-radius: 0;\r\n\tborder-bottom: 2px solid var(--accent-color);\r\n\tbackground: transparent;\r\n\twidth: 100%;\r\n\r\n\t&:focus {\r\n\t\toutline: solid var(--accent-focus-color);\r\n\t}\r\n`\r\nexport default Option","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  change,\r\n  selectRot\r\n} from './rotSlice';\r\nimport SelectWrapper from '../../components/common/Select/SelectWrapper'\r\nimport Select from '../../components/common/Select'\r\nimport Option from '../../components/common/Select/Option'\r\n\r\nconst optionArray: number[] =  [...Array(14).keys()]\r\n\r\nconst RotSelect = () => {\r\n  const rot = useSelector(selectRot);\r\n  const dispatch = useDispatch();\r\n  const optionList = optionArray.map(option => {\r\n    return <Option value={option} key={option}>{option}</Option>\r\n  })\r\n\r\n  return (\r\n      <SelectWrapper>\r\n        <Select\r\n          value = { rot }\r\n          onChange={({target}) => {\r\n            const selectedOptionValue:number = +target.options[target.selectedIndex].value\r\n            dispatch(change(selectedOptionValue))\r\n          }\r\n        }>\r\n          {optionList}\r\n        </Select>\r\n      </SelectWrapper>\r\n  )\r\n}\r\n\r\nexport default RotSelect","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from '../../store';\r\nimport { convertToString, isAlphanumeric, isNumeric, isEmpty, isUpperCase, shiftIndexValue } from '../util/helprs'\r\n\r\ninterface CipherState {\r\n  inputValue: string | number;\r\n  outputValue: string\r\n}\r\n\r\nconst initialState: CipherState = {\r\n  inputValue: '',\r\n  outputValue: ''\r\n};\r\n\r\nexport const cipherSlice = createSlice({\r\n  name: 'cipher',\r\n  initialState,\r\n  reducers: {\r\n    set: (state, action: PayloadAction<{value: string, key: string}>) => {\r\n      const { key, value } = action.payload\r\n      state.inputValue = value\r\n    },\r\n    clear: (state) => {\r\n      state.inputValue = '';\r\n      state.outputValue = '';\r\n    },\r\n    cipher: (state, action: PayloadAction<{input: string | number, rot: number, alphabet: string[]}>) => {\r\n      const { input, rot, alphabet } = action.payload\r\n      const inputString: string = convertToString(input)\r\n      const inputArray: string[] = [...inputString]\r\n      let cipheredString: string = ''\r\n\r\n      if (isEmpty(inputString)) throw new Error('Given string is empty!')\r\n\r\n      inputArray.forEach((char) => {\r\n        if (!isAlphanumeric(char) || isNumeric(char)) return (cipheredString = cipheredString.concat(char))\r\n\r\n        const valueIndex: number = alphabet.indexOf(char.toLowerCase())\r\n        const newValueIndex: number = shiftIndexValue(valueIndex, rot, alphabet.length)\r\n        const newChar: string = alphabet[newValueIndex]\r\n\r\n        cipheredString = isUpperCase(char)\r\n        ? cipheredString.concat(newChar.toUpperCase())\r\n        : cipheredString.concat(newChar)\r\n      })\r\n\r\n      state.outputValue = cipheredString\r\n    }\r\n  }\r\n})\r\n\r\nexport const { clear, set, cipher } = cipherSlice.actions;\r\n\r\nexport const selectInput = (state: RootState) => state.cipher.inputValue\r\nexport const selectOutput = (state: RootState) => state.cipher.outputValue\r\n\r\nexport default cipherSlice.reducer","export const convertToString = (input: string | number): string => {\n  return input.toString()\n}\n\nexport const isEmpty = (input: string): boolean => {\n  return input === '' ? true : false\n}\n\nexport const isAlphanumeric = (input: string): boolean => {\n  return input.match(/[a-z]|[A-Z]|[0-9]/gi) !== null ? true : false\n}\n\nexport const isNumeric = (input: string): boolean => {\n  return input.match(/[0-9]/gi) !== null ? true : false\n}\n\nexport const isUpperCase = (input: string): boolean => {\n  return input.match(/[0-9]/gi) === null && input === input.toUpperCase() ? true : false\n}\n\nexport const isOverArrayLength = (\n  indexValue: number,\n  arrayLength: number,\n  rot: number,\n): boolean => {\n  return indexValue + rot > arrayLength - 1 ? true : false\n}\n\nexport const shiftIndexValue = (index: number, rot: number, arrayLength: number): number => {\n  if (isOverArrayLength(index, arrayLength, rot)) return rot - (arrayLength - index)\n\n  return index + rot\n}","import { createSlice } from '@reduxjs/toolkit';\nimport { RootState } from '../../store';\nimport { generateAlphabet } from '../util/generateAlphabet'\n\ninterface AlphabetState {\n  alphabet: string[]\n}\n\nconst initialState: AlphabetState = {\n  alphabet: generateAlphabet()\n};\n\nexport const alphabetSlice = createSlice({\n  name: 'alphabet',\n  initialState,\n  reducers: {}\n})\n\n\nexport const selectAlphabet = (state: RootState) => state.alphabet.alphabet\n\nexport default alphabetSlice.reducer","export const generateAlphabet = (): string[] => {\n  const alphabet: string[] = []\n  const start: number = 'a'.charCodeAt(0)\n  const end: number = 'z'.charCodeAt(0)\n\n  for (let i: number = start; i < end + 1; i++) {\n    alphabet.push(String.fromCharCode(i))\n  }\n\n  return alphabet\n}\n","import styled from 'styled-components'\r\n\r\nconst Input = styled.input`\r\n  -webkit-appearance: none;\r\n\tappearance: none;\r\n\tdisplay: block;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tborder: 0;\r\n\tborder-radius: 0;\r\n\tborder-bottom: 2px solid var(--accent-color);\r\n\tbackground: transparent;\r\n\twidth: 100%;\r\n\tmargin-right: 1rem;\r\n\r\n\t&:focus {\r\n\t\toutline: solid var(--accent-focus-color);\r\n\t}\r\n`\r\n\r\nexport default Input","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  set,\r\n  clear,\r\n  cipher\r\n} from './cipherSlice';\r\nimport { selectAlphabet } from '../alphabet/alphabetSlice'\r\nimport { selectRot } from '../rot/rotSlice'\r\nimport Input from '../../components/common/Input'\r\n\r\nconst InputText = () => {\r\n  const dispatch = useDispatch();\r\n  const alphabetArray = useSelector(selectAlphabet)\r\n  const rotValue = useSelector(selectRot)\r\n\r\n  return (\r\n    <Input\r\n      onKeyPress={( e ) => {\r\n        const eventData = {\r\n          value: e.currentTarget.value,\r\n          key: e.key\r\n        }\r\n        if (e.key === 'Enter') {\r\n          dispatch(set(eventData))\r\n          dispatch(cipher({input: eventData.value, rot: rotValue, alphabet: alphabetArray}))\r\n        }\r\n      }}\r\n      onClick={( e ) => {\r\n        e.currentTarget.value = ''\r\n        dispatch(clear())\r\n      }}\r\n      onBlur={(e) => {\r\n        const eventData = {\r\n          value: e.currentTarget.value,\r\n          key: ''\r\n        }\r\n        dispatch(set(eventData))\r\n        dispatch(cipher({input: eventData.value, rot: rotValue, alphabet: alphabetArray}))\r\n      }\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default InputText","import React from 'react'\nimport styled from 'styled-components'\nimport RotSelect from '../../../features/rot/Rot'\nimport InputText from '../../../features/cipher/Cipher'\n\nconst Inputs = () => {\n  return (\n    <InputsWrapper>\n      <InputText/>\n      <RotSelect/>\n    </InputsWrapper>\n  )\n}\n\nconst InputsWrapper = styled.section`\n  align-self: end;\n\tjustify-self: center;\n\tgrid-area: input;\n\tdisplay: flex;\n\tmargin: .5rem 1rem;\n  min-width: 252px;\n`\n\nexport default Inputs","import styled from 'styled-components'\n\nconst P = styled.p`\n  color: var(--body-text-color);\n\tborder-radius: 0;\n\tborder-bottom: 2px solid var(--accent-color);\n\tfont-size: 1rem;\n\tline-height: 1rem;\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 100%;\n\ttext-align: center;\n\tword-wrap: break-word;\n`\n\nexport default P","import React from 'react'\nimport styled from 'styled-components'\nimport P from '../../common/P'\nimport { useSelector } from 'react-redux';\nimport { selectOutput } from '../../../features/cipher/cipherSlice'\n\nconst Output = () => {\n  const cipheredString = useSelector(selectOutput)\n  return (\n    <OutputWrapper>\n      <P>\n        {cipheredString}\n      </P>\n    </OutputWrapper>\n  )\n}\n\nconst OutputWrapper = styled.section`\n  align-self: end;\n\tjustify-self: center;\n\tgrid-area: output;\n\tdisplay: flex;\n\tmargin: .5rem 1rem;\n\tmin-width: 252px;\n\tbackground: transparent;\n`\n\nexport default Output","import React from 'react'\nimport styled from 'styled-components'\nimport Header from './Header'\nimport Inputs from './Inputs'\nimport Output from './Output'\n\nconst Main = () => {\n  return (\n    <StyledMain>\n      <Header/>\n      <Inputs/>\n      <Output/>\n    </StyledMain>\n  )\n}\n\nconst StyledMain = styled.main`\ndisplay: grid;\n\tgrid-template-areas: \"header input\" \"header output\" \"header .\";\n\tgrid-template-columns: 0 4fr;\n\tgrid-template-rows: 2fr 2fr 10fr;\n\twidth: 100%;\n\n\t@media (min-width: 736px) {\n\t\tgrid-template-columns: 2fr 4fr;\n\t}\n`\n\nexport default Main","import React from 'react'\nimport styled from 'styled-components'\n\nconst BottomSvg = () => {\n  const screenWidth = window.outerWidth\n  return (\n    <Svg\n        width={screenWidth}\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M0 458.5L53 589.5L108.208 655H161.208L216.417 458.5L269.417 65.5L324.625 458.5L377.625 393L432.833 262L485.833 655L541.042 65.5H594.042L649.25 262L702.25 196.5L757.458 262L810.458 458.5L865.667 262L918.667 655H973.875L1026.87 327.5L1082.08 589.5L1135.08 327.5L1190.29 589.5L1243.29 65.5L1298.5\n            262L1351.5 458.5L1406.71 327.5L1459.71 262L1514.92 327.5L1567.92 65.5L1623.12 655L1676.12 393L1731.33 327.5L1784.33 524L1839.54 131L1892.54 196.5L1947.75 0L2000.75 589.5L2055.96 262L2108.96 458.5L2164.17 589.5L2217.17 393L2272.37 196.5L2325.37 327.5L2380.58 65.5L2433.58 589.5L2488.79 196.5L2541.79\n            655L2597 393L2650 131V655H2597H2541.79H2488.79H2433.58H2380.58H2325.37H2272.37H2217.17H2164.17H2108.96H2055.96H2000.75H1947.75H1892.54H1839.54H1784.33H1731.33H1676.12H1623.12H1567.92H1514.92H1459.71H1406.71H1351.5H1298.5H1243.29H1190.29H1135.08H1082.08H1026.87H973.875H918.667H865.667H810.458H757.458H702.25H649.25H594.042H541.042H485.833H432.833H377.625H324.625H269.417H216.417H161.208H108.208H53H0V458.5Z\"\n        fill=\"#F5AF87\"/>\n    </Svg>\n  )\n}\n\nconst Svg = styled.svg.attrs({\n  version: '1.1',\n  xmlns: 'http://www.w3.org/2000/svg',\n  xmlnsXlink: 'http://www.w3.org/1999/xlink',\n})`\n  height: 655px;\n  position: absolute;\n\t\twidth: 100%;\n\t\tbottom: 0;\n\t\tz-index: -1;\n`\n\nexport default BottomSvg","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport Main from './app/components/Main';\r\nimport BottomSvg from './app/components/BottomSvg'\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppBody>\r\n      <Main/>\r\n      <BottomSvg/>\r\n    </AppBody>\r\n  )\r\n}\r\n\r\nconst AppBody = styled.div`\r\nbackground: var(--bg-gradient);\r\n\tmin-height: 100vh;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tdisplay: flex;\r\n  overflow: hidden;\r\n  position: relative;\r\n  z-index: 1;\r\n`\r\n\r\nexport default App\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport alphabetReducer from '../features/alphabet/alphabetSlice'\r\nimport rotReducer from '../features/rot/rotSlice'\r\nimport cipherReducer from '../features/cipher/cipherSlice'\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    alphabet: alphabetReducer,\r\n    rot: rotReducer,\r\n    cipher: cipherReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './scss/index.scss';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}